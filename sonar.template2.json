{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westus"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_A6"
    }
  },
  "variables": {
    "storageAccountName": "[concat('sonar', uniqueString(resourceGroup().id))]",
    "virtualMachineName": "[concat('vm', uniqueString(resourceGroup().id))]",
    "adminUsername": "sonaruser",
    "adminPassword": "P2ssw0rd@Dev",
    "networkInterfaceName": "[concat('network', uniqueString(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "addressPrefix": "sonaruser",
    "publicIpAddressName": "[concat('public', uniqueString(resourceGroup().id))]",
    "publicIpAddressType": "Dynamic",
    "sqlConnectivityType": "Public",
    "sqlPortNumber": 1433,
    "sqlStorageDisksCount": 1,
    "sqlStorageWorkloadType": "GENERAL",
    "sqlStorageDisksConfigurationType": "NEW",
    "sqlStorageStartingDeviceId": 2,
    "sqlStorageDeploymentToken": 27240,
    "sqlAutopatchingDayOfWeek": "Sunday",
    "sqlAutopatchingStartHour": "2",
    "sqlAutopatchingWindowDuration": "60",
    "sqlAuthenticationLogin": "sonaruser",
    "sqlAuthenticationPassword": "P2ssw0rd@Dev",
    "rServicesEnabled": "false",
    "VNetName": "VNet",
    "VNetPrefix": "10.0.0.0/16",
    "VNetSubnet1Name": "Subnet-1",
    "VNetSubnet1Prefix": "10.0.0.0/24",
    "VNetSubnet2Name": "Subnet-2",
    "VNetSubnet2Prefix": "10.0.1.0/24",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('VNetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('VNetSubnet1Name'))]"
  },
  "resources": [
    {
      "name": "[variables('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('virtualMachineName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2016-WS2012R2",
            "sku": "Express",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('virtualMachineName')]",
            "vhd": {
              "uri": "[concat(concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), variables('virtualMachineName'), '201610108559.vhd')]"
            },
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(variables('virtualMachineName'), '-disk-1')]",
              "vhd": {
                "uri": "[concat(concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), variables('virtualMachineName'), '-disk-1-201610108559', '.vhd')]"
              },
              "createOption": "Empty",
              "lun": 0,
              "diskSizeGB": "1023",
              "caching": "ReadOnly"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('virtualMachineName'), '/SqlIaasExtension')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ],
      "properties": {
        "type": "SqlIaaSAgent",
        "publisher": "Microsoft.SqlServer.Management",
        "typeHandlerVersion": "1.2",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "AutoTelemetrySettings": {
            "Region": "[parameters('location')]"
          },
          "AutoPatchingSettings": {
            "PatchCategory": "WindowsMandatoryUpdates",
            "Enable": true,
            "DayOfWeek": "[variables('sqlAutopatchingDayOfWeek')]",
            "MaintenanceWindowStartingHour": "[variables('sqlAutopatchingStartHour')]",
            "MaintenanceWindowDuration": "[variables('sqlAutopatchingWindowDuration')]"
          },
          "AutoBackupSettings": {
            "Enable": false,
            "RetentionPeriod": "30",
            "EnableEncryption": false
          },
          "KeyVaultCredentialSettings": {
            "Enable": false,
            "CredentialName": ""
          },
          "ServerConfigurationsManagementSettings": {
            "SQLConnectivityUpdateSettings": {
              "ConnectivityType": "[variables('sqlConnectivityType')]",
              "Port": "[variables('sqlPortNumber')]"
            },
            "SQLWorkloadTypeUpdateSettings": {
              "SQLWorkloadType": "[variables('sqlStorageWorkloadType')]"
            },
            "SQLStorageUpdateSettings": {
              "DiskCount": "[variables('sqlStorageDisksCount')]",
              "NumberOfColumns": "[variables('sqlStorageDisksCount')]",
              "StartingDeviceID": "[variables('sqlStorageStartingDeviceId')]",
              "DiskConfigurationType": "[variables('sqlStorageDisksConfigurationType')]"
            },
            "AdditionalFeaturesServerConfigurations": {
              "IsRServicesEnabled": "[variables('rServicesEnabled')]"
            }
          }
        },
        "protectedSettings": {
          "SQLAuthUpdateUserName": "[variables('sqlAuthenticationLogin')]",
          "SQLAuthUpdatePassword": "[variables('sqlAuthenticationPassword')]"
        }
      }
    },
    {
      "name": "[variables('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('VNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "[variables('publicIpAddressType')]",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2016-09-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('virtualMachineName')]"
        }
      }
    },
    {
      "name": "[variables('VNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[variables('VNetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('VNetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('VNetSubnet1Prefix')]"
            }
          },
          {
            "name": "[variables('VNetSubnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('VNetSubnet2Prefix')]"
            }
          }
        ]
      }
    }
  ]
}